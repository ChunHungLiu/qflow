#
# qflow project source compile makefile
#

# Main compiler arguments
CFLAGS = @CFLAGS@
DEFS = @DEFS@
LIBS = @LIBS@
LDFLAGS = @LDFLAGS@
INSTALL = @INSTALL@

QFLOW_LIB_DIR = @QFLOW_LIB_DIR@
QFLOW_TW_PATH = @QFLOW_TW_PATH@
QFLOW_QROUTER_PATH = @QFLOW_QROUTER_PATH@
QFLOW_ABC_PATH = @QFLOW_ABC_PATH@
QFLOW_ODIN_PATH = @QFLOW_ODIN_PATH@
QFLOW_MAGIC_PATH = @QFLOW_MAGIC_PATH@

OBJECTS = AddIO2BDnet.o BDnet2BSpice.o BDnet2Verilog.o CleanUpBDnet.o BDnetFanout.o
OBJECTS += vpreproc.o dcombine.o vsplit.o blifrtl2bdnet.o liberty2tech.o
SOURCES := $(patsubst %.o,%.c,$(OBJECTS))
TARGETS := $(patsubst %.o,%$(EXEEXT),$(OBJECTS))

BININSTALL = ${QFLOW_LIB_DIR}/bin

all: $(TARGETS)

AddIO2BDnet$(EXEEXT): AddIO2BDnet.o
	$(CC) $(LDFLAGS) AddIO2BDnet.o -o $@ $(LIBS)

BDnet2BSpice$(EXEEXT): BDnet2BSpice.o
	$(CC) $(LDFLAGS) BDnet2BSpice.o -o $@ $(LIBS)

BDnet2Verilog$(EXEEXT): BDnet2Verilog.o
	$(CC) $(LDFLAGS) BDnet2Verilog.o -o $@ $(LIBS)

CleanUpBDnet$(EXEEXT): CleanUpBDnet.o
	$(CC) $(LDFLAGS) CleanUpBDnet.o -o $@ $(LIBS)

vpreproc$(EXEEXT): vpreproc.o
	$(CC) $(LDFLAGS) vpreproc.o -o $@ $(LIBS)

dcombine$(EXEEXT): dcombine.o
	$(CC) $(LDFLAGS) dcombine.o -o $@ $(LIBS)

vsplit$(EXEEXT): vsplit.o
	$(CC) $(LDFLAGS) vsplit.o -o $@ $(LIBS)

blifrtl2bdnet$(EXEEXT): blifrtl2bdnet.o
	$(CC) $(LDFLAGS) blifrtl2bdnet.o -o $@ $(LIBS)

liberty2tech$(EXEEXT): liberty2tech.o
	$(CC) $(LDFLAGS) liberty2tech.o -o $@ $(LIBS)

install: $(TARGETS)
	@echo "Installing verilog and BDNET file format handlers"
	$(INSTALL) -d ${BININSTALL}
	@for target in $(TARGETS); do \
	   $(INSTALL) $$target ${BININSTALL} ;\
	done
	@echo "Installing links to TimberWolf, qrouter, odin_ii, and abc"
	(cd ${BININSTALL};  $(RM) -f twdir;  ln -s $(QFLOW_TW_PATH) twdir)
	(cd ${BININSTALL};  $(RM) -f qrouter;  ln -s $(QFLOW_QROUTER_PATH) qrouter)
	(cd ${BININSTALL};  $(RM) -f abc;  ln -s $(QFLOW_ABC_PATH) abc)
	(cd ${BININSTALL};  $(RM) -f odin_ii;  ln -s $(QFLOW_ODIN_PATH) odin_ii)
	(cd ${BININSTALL};  $(RM) -f magic;  ln -s $(QFLOW_MAGIC_PATH) magic)

uninstall:
	$(RM) -rf ${BININSTALL}

clean:
	$(RM) -f $(OBJECTS)
	$(RM) -f $(TARGETS)

veryclean:
	$(RM) -f $(OBJECTS)
	$(RM) -f $(TARGETS)

.c.o:
	$(CC) $(CFLAGS) $(CPPFLAGS) $(DEFS) -c $< -o $@
